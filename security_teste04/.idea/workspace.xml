<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d7c74fef-a2c8-4f6e-962d-4b70215e7bc0" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2enG2yvLKjUYvzozw6yI4ijBuZN" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Application.ServerApplication.executor": "Run",
    "JUnit.ProductControllerTest.executor": "Run",
    "JUnit.ProductControllerTest.getAllProducts_returnsOkWhenProductsExist.executor": "Run",
    "JUnit.ProductControllerTest.getProductById_returnsNoContentWhenProductDoesNotExist.executor": "Run",
    "JUnit.ProductControllerTest.getProductById_returnsOkWhenProductExists.executor": "Run",
    "JUnit.ProductControllerTest.getProductsByCategory_returnsNoContentWhenNoProductsExist.executor": "Run",
    "JUnit.ProductControllerTest.getProductsByCategory_returnsOkWhenProductsExist.executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "main",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "C:/Users/Igor/Documents/GitHub/desafio-2025-1/backend",
    "settings.editor.selected.configurable": "reference.settings.project.maven.repository.indices"
  }
}]]></component>
  <component name="RunManager" selected="Application.ServerApplication">
    <configuration name="ServerApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="br.edu.utfpr.pb.pw25s.server.ServerApplication" />
      <module name="server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="br.edu.utfpr.pb.pw25s.server.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductControllerTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="br.edu.utfpr.pb.pw25s.server.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="br.edu.utfpr.pb.pw25s.server" />
      <option name="MAIN_CLASS_NAME" value="br.edu.utfpr.pb.pw25s.server.ProductControllerTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductControllerTest.getProductById_returnsNoContentWhenProductDoesNotExist" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="br.edu.utfpr.pb.pw25s.server.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="br.edu.utfpr.pb.pw25s.server" />
      <option name="MAIN_CLASS_NAME" value="br.edu.utfpr.pb.pw25s.server.ProductControllerTest" />
      <option name="METHOD_NAME" value="getProductById_returnsNoContentWhenProductDoesNotExist" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductControllerTest.getProductsByCategory_returnsNoContentWhenNoProductsExist" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="br.edu.utfpr.pb.pw25s.server.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="br.edu.utfpr.pb.pw25s.server" />
      <option name="MAIN_CLASS_NAME" value="br.edu.utfpr.pb.pw25s.server.ProductControllerTest" />
      <option name="METHOD_NAME" value="getProductsByCategory_returnsNoContentWhenNoProductsExist" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ProductControllerTest.getProductsByCategory_returnsOkWhenProductsExist" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="server" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="br.edu.utfpr.pb.pw25s.server.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="br.edu.utfpr.pb.pw25s.server" />
      <option name="MAIN_CLASS_NAME" value="br.edu.utfpr.pb.pw25s.server.ProductControllerTest" />
      <option name="METHOD_NAME" value="getProductsByCategory_returnsOkWhenProductsExist" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.ServerApplication" />
        <item itemvalue="JUnit.ProductControllerTest" />
        <item itemvalue="JUnit.ProductControllerTest.getProductsByCategory_returnsNoContentWhenNoProductsExist" />
        <item itemvalue="JUnit.ProductControllerTest.getProductsByCategory_returnsOkWhenProductsExist" />
        <item itemvalue="JUnit.ProductControllerTest.getProductById_returnsNoContentWhenProductDoesNotExist" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d7c74fef-a2c8-4f6e-962d-4b70215e7bc0" name="Changes" comment="" />
      <created>1712532726060</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1712532726060</updated>
    </task>
    <servers />
  </component>
  <component name="XDebuggerManager">
    <pin-to-top-manager>
      <pinned-members>
        <PinnedItemInfo parentTag="java.lang.String" memberName="value" />
        <PinnedItemInfo parentTag="org.springframework.security.authentication.ProviderManager" memberName="eraseCredentialsAfterAuthentication" />
      </pinned-members>
    </pin-to-top-manager>
  </component>
</project>